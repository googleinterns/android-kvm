From 903ac6f99a52809a07d4f249d5b7f2c328feb427 Mon Sep 17 00:00:00 2001
From: George Popescu <georgepope@google.com>
Date: Mon, 10 Aug 2020 15:45:14 +0000
Subject: [PATCH 10/12] KVM: arm64: Type mismatch undefined behaviour detected
 at EL2

For type mismatch undefiend behaviour there are two data structures
provided by UBSAN, type_mismatch_data and type_mismatch_data_v1. They can be
both stored inside a common data structure. At EL1 the common structure can be
treated as type_mismatch_data.

Signed-off-by: George Popescu <georgepope@google.com>
---
 arch/arm64/include/asm/kvm_ubsan.h  |  6 +++-
 arch/arm64/kvm/hyp/nvhe/kvm_ubsan.c | 43 +++++++++++++++++++++++++++--
 arch/arm64/kvm/kvm_ubsan_buffer.c   |  4 +++
 3 files changed, 49 insertions(+), 4 deletions(-)

diff --git a/arch/arm64/include/asm/kvm_ubsan.h b/arch/arm64/include/asm/kvm_ubsan.h
index 116804b1869f..7216fe524d39 100644
--- a/arch/arm64/include/asm/kvm_ubsan.h
+++ b/arch/arm64/include/asm/kvm_ubsan.h
@@ -21,13 +21,15 @@ struct kvm_ubsan_info {
         UBSAN_OUT_OF_BOUNDS,
         UBSAN_UNREACHABLE_DATA,
         UBSAN_SHIFT_OUT_OF_BOUNDS,
-        UBSAN_INVALID_DATA
+        UBSAN_INVALID_DATA,
+        UBSAN_TYPE_MISMATCH
     } type;
     union {
         struct out_of_bounds_data out_of_bounds_data;
         struct unreachable_data unreachable_data;
         struct shift_out_of_bounds_data shift_out_of_bounds_data;
         struct invalid_value_data invalid_value_data;
+        struct type_mismatch_data type_mismatch_data;
     };
     union {
         struct ubsan_values u_val;
@@ -38,3 +40,5 @@ void __ubsan_handle_out_of_bounds(void *_data, void *index);
 void __ubsan_handle_builtin_unreachable(void *_data);
 void __ubsan_handle_shift_out_of_bounds(void *_data, void *lhs, void *rhs);
 void __ubsan_handle_load_invalid_value(void *_data, void *val);
+void __ubsan_handle_type_mismatch(struct type_mismatch_data  *_data, void *ptr);
+
diff --git a/arch/arm64/kvm/hyp/nvhe/kvm_ubsan.c b/arch/arm64/kvm/hyp/nvhe/kvm_ubsan.c
index d43fe562d2be..5851be4bdaec 100644
--- a/arch/arm64/kvm/hyp/nvhe/kvm_ubsan.c
+++ b/arch/arm64/kvm/hyp/nvhe/kvm_ubsan.c
@@ -30,7 +30,25 @@ static inline struct kvm_ubsan_info *kvm_ubsan_buffer_next_slot(void)
 	return res;
 }
 
-void __ubsan_handle_add_overflow(void *_data, void *lhs, void *rhs) {}
+void write_type_mismatch_data(struct type_mismatch_data_common *data, void *lval)
+{
+    struct kvm_ubsan_info *slot;
+    struct type_mismatch_data *aux_cont;
+
+    slot = kvm_ubsan_buffer_next_slot();
+    if (slot) {
+        slot->type = UBSAN_TYPE_MISMATCH;
+        aux_cont = &slot->type_mismatch_data;
+        aux_cont->location.file_name = data->location->file_name;
+        aux_cont->location.reported = data->location->reported;
+        aux_cont->type = data->type;
+        aux_cont->alignment = data->alignment;
+        aux_cont->type_check_kind = data->type_check_kind;
+        slot->u_val.lval = lval;
+    }
+}
+
+void __ubsan_handle_add_overflow(void *_data, void *lhs, void *rhs){}
 
 void __ubsan_handle_sub_overflow(void *_data, void *lhs, void *rhs) {}
 
@@ -41,9 +59,28 @@ void __ubsan_handle_negate_overflow(void *_data, void *old_val) {}
 void __ubsan_handle_divrem_overflow(void *_data, void *lhs, void *rhs) {}
 
 void __ubsan_handle_type_mismatch(struct type_mismatch_data *data,
-				void *ptr) {}
+				void *ptr)
+{
+	struct type_mismatch_data_common common_data = {
+		.location = &data->location,
+		.type = data->type,
+		.alignment = data->alignment,
+		.type_check_kind = data->type_check_kind
+	};
+	write_type_mismatch_data(&common_data, ptr);
+}
 
-void __ubsan_handle_type_mismatch_v1(void *_data, void *ptr) {}
+void __ubsan_handle_type_mismatch_v1(void *_data, void *ptr)
+{
+	struct type_mismatch_data_v1 *data = _data;
+	struct type_mismatch_data_common common_data = {
+		.location = &data->location,
+		.type = data->type,
+		.alignment = 1UL << data->log_alignment,
+		.type_check_kind = data->type_check_kind
+	};
+	write_type_mismatch_data(&common_data, ptr);
+}
 
 void __ubsan_handle_out_of_bounds(void *_data, void *index)
 {
diff --git a/arch/arm64/kvm/kvm_ubsan_buffer.c b/arch/arm64/kvm/kvm_ubsan_buffer.c
index d00a9c07b224..7a9786f5d5c1 100644
--- a/arch/arm64/kvm/kvm_ubsan_buffer.c
+++ b/arch/arm64/kvm/kvm_ubsan_buffer.c
@@ -36,6 +36,10 @@ void __kvm_check_ubsan_data(struct kvm_ubsan_info *slot)
         	__ubsan_handle_load_invalid_value(&slot->invalid_value_data,
 				slot->u_val.lval);
 		break;
+	case UBSAN_TYPE_MISMATCH:
+		__ubsan_handle_type_mismatch(&slot->type_mismatch_data,
+				slot->u_val.lval);
+		break;
     	}
 }
 
-- 
2.28.0.220.ged08abb693-goog

