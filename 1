KVM: arm64: UBSAN_BOUNDS option causes a trap.

When the kernel is compiled with Clang, UBSAN_BOUNDS inserts a brk after
the handler call, preventing it from printing any information processed
inside the buffer. To solve this the -fsanitize=array-bounds does
different things for CLANG and gcc.

Signed-off-by: George Popescu <georgepope@google.com>

# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
#
# Author:    George Popescu <georgepope@google.com>
# Date:      Wed Aug 12 14:39:41 2020 +0000
#
# interactive rebase in progress; onto fc495ab8f532
# Last commands done (3 commands done):
#    pick bbf100d422e9 KVM: arm64: Add a buffer that can pass UBSan data from hyp/nVHE to kernel
#    reword 9a30f46dc606 KVM: arm64: UBSan_BOUNDS option causes a trap.
# Next commands to do (7 remaining commands):
#    pick 7ee922656a02 KVM: arm64: Enable UBSAN_BOUNDS for the both the kernel and hyp/nVHE
#    pick d1eadb0db4fb KVM: arm64: Enable UBsan check for unreachable code inside hyp/nVHE code
# You are currently editing a commit while rebasing branch 'georgepope/buffer_ubsan_v3' on 'fc495ab8f532'.
#
# Changes to be committed:
#	modified:   scripts/Makefile.ubsan
#
